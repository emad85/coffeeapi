!function(e){var o={};function r(t){if(o[t])return o[t].exports;var s=o[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=o,r.d=function(e,o,t){r.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,o){if(1&o&&(e=r(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var s in e)r.d(t,s,function(o){return e[o]}.bind(null,s));return t},r.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(o,"a",o),o},r.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},r.p="",r(r.s=10)}([function(e,o){e.exports=require("mongoose")},function(e,o){e.exports=require("express")},function(e,o){e.exports=require("express-validator")},function(e,o){e.exports=require("path")},function(e,o){e.exports=require("lodash")},function(e,o){e.exports=require("mongodb-memory-server")},function(e,o){e.exports=require("cors")},function(e,o){e.exports=require("dotenv")},function(e){e.exports=JSON.parse('[{"code":"CM001","productType":"small","waterLineCompatible":false,"model":"base"},{"code":"CM002","productType":"small","waterLineCompatible":false,"model":"premium"},{"code":"CM003","productType":"small","waterLineCompatible":true,"model":"deluxe"},{"code":"CM101","productType":"large","waterLineCompatible":false,"model":"base"},{"code":"CM102","productType":"large","waterLineCompatible":true,"model":"deluxe"},{"code":"CM103","productType":"large","waterLineCompatible":true,"model":"deluxe"},{"code":"EM001","productType":"espresso","waterLineCompatible":false,"model":"base"},{"code":"EM002","productType":"espresso","waterLineCompatible":false,"model":"premium"},{"code":"EM003","productType":"espresso","waterLineCompatible":true,"model":"deluxe"}]')},function(e){e.exports=JSON.parse('[{"code":"CP001","productType":"small","flavor":"vanilla","packageSize":1},{"code":"CP003","productType":"small","flavor":"vanilla","packageSize":3},{"code":"CP011","productType":"small","flavor":"caramel","packageSize":1},{"code":"CP013","productType":"small","flavor":"caramel","packageSize":3},{"code":"CP021","productType":"small","flavor":"psl","packageSize":1},{"code":"CP023","productType":"small","flavor":"psl","packageSize":3},{"code":"CP031","productType":"small","flavor":"mocha","packageSize":1},{"code":"CP033","productType":"small","flavor":"mocha","packageSize":3},{"code":"CP041","productType":"small","flavor":"hazelnut","packageSize":1},{"code":"CP043","productType":"small","flavor":"hazelnut","packageSize":3},{"code":"CP101","productType":"large","flavor":"vanilla","packageSize":1},{"code":"CP103","productType":"large","flavor":"vanilla","packageSize":3},{"code":"CP111","productType":"large","flavor":"caramel","packageSize":1},{"code":"CP113","productType":"large","flavor":"caramel","packageSize":3},{"code":"CP121","productType":"large","flavor":"psl","packageSize":1},{"code":"CP123","productType":"large","flavor":"psl","packageSize":3},{"code":"CP131","productType":"large","flavor":"mocha","packageSize":1},{"code":"CP133","productType":"large","flavor":"mocha","packageSize":3},{"code":"CP141","productType":"large","flavor":"hazelnut","packageSize":1},{"code":"CP143","productType":"large","flavor":"hazelnut","packageSize":3},{"code":"EP003","productType":"espresso","flavor":"vanilla","packageSize":3},{"code":"EP005","productType":"espresso","flavor":"vanilla","packageSize":5},{"code":"EP007","productType":"espresso","flavor":"vanilla","packageSize":7},{"code":"EP013","productType":"espresso","flavor":"caramel","packageSize":3},{"code":"EP015","productType":"espresso","flavor":"caramel","packageSize":5},{"code":"EP017","productType":"espresso","flavor":"caramel","packageSize":7}]')},function(e,o,r){"use strict";r.r(o);var t=new class{constructor(){}info(...e){console.log(...e)}error(...e){console.log(...e)}debug(...e){console.trace(...e)}},s=r(3),a=r.n(s),c=r(1),n=r.n(c),i=r(4),l=r.n(i),p=r(2);const u=200,d=204,f=422;class m{constructor(e){this.service=e,this.list=this.list.bind(this)}successResponse(e,o,r){Array.isArray(r)?r.length?o.status(u).send(r):o.status(d).send([]):Object.keys(r).length>0?o.status(u).send(r):o.status(d).send({})}handleError(e,o,r){t.error(r),o.status(500)}async list(e,o,r){const t=Object(p.validationResult)(e);if(t&&t.errors&&t.errors.length)o.status(f).send(t.errors);else{let r,t,s,a={};e.query&&(r=e.query.offset?Number.parseInt(e.query.offset):0,t=e.query.limit?Number.parseInt(e.query.limit):null,s=e.query.fields,a=l.a.omit(e.query,["offset","limit","fields"])),this.service.list(a,s,t,r).then(r=>this.successResponse(e,o,r)).catch(r=>this.handleError(e,o,r))}}}const y=process.env.DEFAULT_PAGE_SIZE||50;class g{constructor(e){this.repository=e,this.list=this.list.bind(this)}async list(e={},o=null,r=y,t=0){return await this.repository.find(e,o,t,r)}}class v{constructor(e){this.model=e}async list(e,o,r,t){throw new Error("List Method not implemented")}}class h extends v{constructor(e,o="code"){super(e),this.model=e,this.defaultSelect=o,this.find=this.find.bind(this)}async find(e={},o,r=0,t=Number.MAX_SAFE_INTEGER){return await this.model.find(e).select(o?`-_id ${o.split(",").join(" ")}`:this.defaultSelect).limit(t).skip(r).lean()}async insert(e){return this.model.insertMany(e)}}var S=r(0),T=r.n(S);class b{constructor(e,o={}){this.schema=o,this.modelName=e,this.model=T.a.model(this.modelName,this.schema)}get(){return this.model}}const C=process.env.COFFEE_MACHINE_MODEL_NAME||"coffeeMachines",P=new T.a.Schema({code:{type:String,unique:!0},productType:{type:String},waterLineCompatible:{type:Boolean},model:{type:String}},{_id:!1,id:!1});var E=(new class extends b{constructor(){super(C,P)}}).get();var z=new class extends h{constructor(){super(E,"-_id code productType waterLineCompatible model",["productType","waterLineCompatible"])}};var k=new class extends g{constructor(){super(z),t.info("initializing coffee machine repository")}};const{check:w,sanitizeQuery:M}=r(2);M("productType").trim().escape(),w("productType").isIn("small","large","espresso");var _=new class extends m{constructor(){super(k)}};const O=[Object(p.check)("waterLineCompatible").isBoolean().optional({nullable:!0})],x=n.a.Router();x.get("/",O,_.list);var N=x;const L=process.env.COFFEE_POD_COLLECTION_NAME||"coffeePods",A=new T.a.Schema({code:{type:String,unique:!0},flavor:{type:String},packageSize:{type:Number},productType:{type:String}},{_id:!1,id:!1});var q=(new class extends b{constructor(){super(L,A)}}).get();var I=new class extends h{constructor(){super(q,"-_id code flavor packageSize productType")}};var j=new class extends g{constructor(){super(I),t.info("initializing coffee pod repository")}};var R=new class extends m{constructor(){super(j)}};const D=n.a.Router(),$=[Object(p.check)("packageSize").isInt({min:1}).optional({checkFalsy:!0})];D.get("/",$,R.list);var B=D;const F=n.a.Router(),G=process.env.API_BASE_URL||"/api/1.0";console.log(`${G}/coffee/machines`),F.use(`${G}/coffee/machines`,N),F.use(`${G}/coffee/pods`,B);var U=F,J=r(5);let H;const W=e=>{const o=e||(()=>{});T.a.disconnect().then(!H||H.stop).then(()=>o(null,!0)).catch(o)},X=(e,o,r)=>{T.a.connect(e,o),T.a.connection.on("error",s=>{"ETIMEDOUT"===s.message.code&&(t.error(s),T.a.connect(e,o)),t.error(s),r(s)}),T.a.connection.once("open",()=>{t.info(`MongoDB successfully connected to ${e}`),r(null,e)})};var Q=r(6),V=r.n(Q);r(7).config();const Y=n()();Y.use(V()()),Y.use(n.a.json()),Y.use(U),Y.get("/",(e,o,r)=>{o.sendfile(a.a.join(__dirname,"/swagger.html"))}),t.info("connecting to db"),(e=>{const o={autoReconnect:!0,reconnectTries:Number.MAX_VALUE,reconnectInterval:1e3,retryWrites:!1};let r;process.env.IN_MEMORY_DB?(H=new J.MongoMemoryServer).getConnectionString().then(r=>{X(r,o,e)}).catch(o=>{e(o)}):(r=`mongodb://\n\t\t\t${process.env.MONGODB_USER}:${process.env.MONGODB_PASSWORD}\n\t\t\t@${proces.env.MONGODB_HOST}/\n\t\t\t${process.env.MONGODB_DBNAME}`,X(uri,o,e))})((e,o)=>{e?t.error(e):(async()=>{try{const e=r(8),o=r(9),t=await z.insert(e),s=await I.insert(o);return console.log("migration done"),{machines:t,pods:s}}catch(e){throw t.error(e),t.error(`Error migrating db sample: ${JSON.stringify(e)}`),e}})().then(()=>Y.emit("ready")).catch(e=>t.error)}),process.on("exit",()=>W()),process.on("SIGINT",()=>W()),process.on("SIGTERM",()=>W());var Z=Y;Z.on("ready",()=>{const e=process.env.DEFAULT_APP_PORT||8080;Z.listen(e,()=>{t.info(`App listening on port# ${e}`)})})}]);